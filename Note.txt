// we will be learning how to use externa data with react appication
// useEffect Hook
import React from 'react'
import {useState} from "react";
function TripList() {
    const [trips, setTrips] = useState([])
    console.log(trips)
    fetch("http://localhost:3000/trips") // use to fetch an resources asynchronously. it take path to resources as an argument. 
    // it return promise that resolve with response object
    // The Response object, in turn, does not directly contain the actual JSON 
    // response body but is instead a representation of the entire HTTP response.
    //  So, to extract the JSON body content from the Response object, we use the 
    //  json() method, which returns a second promise that resolves with the result
    //   of parsing the response body text as JSON.
        .then( response=> response.json())
        .then( data =>setTrips(data)) 
  return (
    <div className='triplist'>
        <h2>Trip List</h2>
    </div>
  )
}

export default TripList
// since using Hook re run the component, due 
// the above code fetch data continously hence we use useEffect hook that allow us to run the code certain time under some condition 
useEffect(()=>{}, []) // second arg is dependency array we dont need to store its return value as nto needed
useEffect will run only if the dependency array has changed value since the last evaluation. empty dependecie will make sure to run the useEffect only once 

// so what is dependency array
// useEffect will run whenever the dependency array value has changed incase if the variable is dynamic